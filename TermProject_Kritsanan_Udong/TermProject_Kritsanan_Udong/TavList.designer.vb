'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="Database1")>  _
Partial Public Class TavListDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertTravel(instance As Travel)
    End Sub
  Partial Private Sub UpdateTravel(instance As Travel)
    End Sub
  Partial Private Sub DeleteTravel(instance As Travel)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("Database1ConnectionString").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Travels() As System.Data.Linq.Table(Of Travel)
		Get
			Return Me.GetTable(Of Travel)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Travel")>  _
Partial Public Class Travel
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Travel_Id As Integer
	
	Private _Travel_Name As String
	
	Private _Travel_Details As String
	
	Private _Travel_Type As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTravel_IdChanging(value As Integer)
    End Sub
    Partial Private Sub OnTravel_IdChanged()
    End Sub
    Partial Private Sub OnTravel_NameChanging(value As String)
    End Sub
    Partial Private Sub OnTravel_NameChanged()
    End Sub
    Partial Private Sub OnTravel_DetailsChanging(value As String)
    End Sub
    Partial Private Sub OnTravel_DetailsChanged()
    End Sub
    Partial Private Sub OnTravel_TypeChanging(value As String)
    End Sub
    Partial Private Sub OnTravel_TypeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Travel_Id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Travel_Id() As Integer
		Get
			Return Me._Travel_Id
		End Get
		Set
			If ((Me._Travel_Id = value)  _
						= false) Then
				Me.OnTravel_IdChanging(value)
				Me.SendPropertyChanging
				Me._Travel_Id = value
				Me.SendPropertyChanged("Travel_Id")
				Me.OnTravel_IdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Travel_Name", DbType:="NVarChar(MAX)")>  _
	Public Property Travel_Name() As String
		Get
			Return Me._Travel_Name
		End Get
		Set
			If (String.Equals(Me._Travel_Name, value) = false) Then
				Me.OnTravel_NameChanging(value)
				Me.SendPropertyChanging
				Me._Travel_Name = value
				Me.SendPropertyChanged("Travel_Name")
				Me.OnTravel_NameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Travel_Details", DbType:="NVarChar(MAX)")>  _
	Public Property Travel_Details() As String
		Get
			Return Me._Travel_Details
		End Get
		Set
			If (String.Equals(Me._Travel_Details, value) = false) Then
				Me.OnTravel_DetailsChanging(value)
				Me.SendPropertyChanging
				Me._Travel_Details = value
				Me.SendPropertyChanged("Travel_Details")
				Me.OnTravel_DetailsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Travel_Type", DbType:="NVarChar(MAX)")>  _
	Public Property Travel_Type() As String
		Get
			Return Me._Travel_Type
		End Get
		Set
			If (String.Equals(Me._Travel_Type, value) = false) Then
				Me.OnTravel_TypeChanging(value)
				Me.SendPropertyChanging
				Me._Travel_Type = value
				Me.SendPropertyChanged("Travel_Type")
				Me.OnTravel_TypeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
