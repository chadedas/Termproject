'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="Database1")>  _
Partial Public Class AboutTakDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertAboutTak(instance As AboutTak)
    End Sub
  Partial Private Sub UpdateAboutTak(instance As AboutTak)
    End Sub
  Partial Private Sub DeleteAboutTak(instance As AboutTak)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("Database1ConnectionString").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property AboutTaks() As System.Data.Linq.Table(Of AboutTak)
		Get
			Return Me.GetTable(Of AboutTak)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AboutTak")>  _
Partial Public Class AboutTak
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _AboutTak_ID As Integer
	
	Private _AboutTak_Name As String
	
	Private _AboutTak_Details As String
	
	Private _AboutTak_Image As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAboutTak_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnAboutTak_IDChanged()
    End Sub
    Partial Private Sub OnAboutTak_NameChanging(value As String)
    End Sub
    Partial Private Sub OnAboutTak_NameChanged()
    End Sub
    Partial Private Sub OnAboutTak_DetailsChanging(value As String)
    End Sub
    Partial Private Sub OnAboutTak_DetailsChanged()
    End Sub
    Partial Private Sub OnAboutTak_ImageChanging(value As String)
    End Sub
    Partial Private Sub OnAboutTak_ImageChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AboutTak_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property AboutTak_ID() As Integer
		Get
			Return Me._AboutTak_ID
		End Get
		Set
			If ((Me._AboutTak_ID = value)  _
						= false) Then
				Me.OnAboutTak_IDChanging(value)
				Me.SendPropertyChanging
				Me._AboutTak_ID = value
				Me.SendPropertyChanged("AboutTak_ID")
				Me.OnAboutTak_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AboutTak_Name", DbType:="NVarChar(50)")>  _
	Public Property AboutTak_Name() As String
		Get
			Return Me._AboutTak_Name
		End Get
		Set
			If (String.Equals(Me._AboutTak_Name, value) = false) Then
				Me.OnAboutTak_NameChanging(value)
				Me.SendPropertyChanging
				Me._AboutTak_Name = value
				Me.SendPropertyChanged("AboutTak_Name")
				Me.OnAboutTak_NameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AboutTak_Details", DbType:="NVarChar(MAX)")>  _
	Public Property AboutTak_Details() As String
		Get
			Return Me._AboutTak_Details
		End Get
		Set
			If (String.Equals(Me._AboutTak_Details, value) = false) Then
				Me.OnAboutTak_DetailsChanging(value)
				Me.SendPropertyChanging
				Me._AboutTak_Details = value
				Me.SendPropertyChanged("AboutTak_Details")
				Me.OnAboutTak_DetailsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AboutTak_Image", DbType:="NVarChar(MAX)")>  _
	Public Property AboutTak_Image() As String
		Get
			Return Me._AboutTak_Image
		End Get
		Set
			If (String.Equals(Me._AboutTak_Image, value) = false) Then
				Me.OnAboutTak_ImageChanging(value)
				Me.SendPropertyChanging
				Me._AboutTak_Image = value
				Me.SendPropertyChanged("AboutTak_Image")
				Me.OnAboutTak_ImageChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
